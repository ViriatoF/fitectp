@model ContosoUniversity.Models.Enrollment

@{
    ViewBag.Title = "Create";
}

<h2>Add a new enrollment for @ViewBag.CurrentStudent</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CourseID, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.StudentID, "Student", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
                @*<span>@ViewBag.CurrentStudent.LastName</span>*@
                @*@Html.Label("CurrentStudent", null, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @*@Html.Label(ContosoUniversity.Models., null, htmlAttributes:new {@class= "control-label col-md-2" })*@
                @*@Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Grade, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    <span class="alert-danger">@ViewBag.SuscribeError</span>
}

    <div>
        @Html.ActionLink(linkText: "Back to List",
                                                        actionName: "Index",
                                                        controllerName: "Student",
                                                        routeValues: new { id = UrlParameter.Optional},
                                                        htmlAttributes: new {@class = "important" }
                                                        )
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
